########################################################################
# GLOBAL SETTINGS
# These are applied across the entire Helm release.
########################################################################
global:
  imagePullSecrets: []          # e.g. ["ghcr-creds"] for a private registry
  nameOverride: ""              # short name applied to all resources (optional)
  fullnameOverride: ""          # fully-qualified name override (optional)

########################################################################
# MCP CONTEXT-FORGE (Gateway / API tier)
########################################################################
mcpContextForge:
  replicaCount: 2                           # horizontal scaling for the gateway

  # --- HORIZONTAL POD AUTOSCALER --------------------------------------
  # * Percentages compare live usage with the container *request* values
  #   (limits are ignored by the HPA).
  # * If both CPU and memory targets are set, crossing either threshold
  #   triggers a scale event.
  # --------------------------------------------------------------------
  hpa:
    enabled: true                           # Set to false to keep a fixed replica count
    minReplicas: 2                          # Never scale below this
    maxReplicas: 10                         # Never scale above this
    targetCPUUtilizationPercentage: 90      # Scale up when avg CPU > 90 % of *request*
    targetMemoryUtilizationPercentage: 90   # Scale up when avg memory > 90 % of *request*

  image:
    repository: ghcr.io/ibm/mcp-context-forge
    tag: latest                 # pin a specific immutable tag in production
    #pullPolicy: IfNotPresent
    pullPolicy: Always          # always pull the latest image; useful for dev/testing

  # Service that fronts the gateway
  service:
    type: ClusterIP
    port: 80                    # external port → containerPort below

  containerPort: 4444           # port the app listens on inside the pod

  # Health & readiness probes
  probes:
    startup:
      # Uncomment to enable sleep startup probe; useful for long-running initializations
      type: exec
      command: ["sh", "-c", "sleep 10"]
      timeoutSeconds: 15      # must exceed the 10-second sleep
      periodSeconds: 5
      failureThreshold: 1

    readiness:
      type: http
      path: /ready
      port: 4444
      initialDelaySeconds: 15 # wait 15 s after container start
      periodSeconds: 10       # check every 10 s
      timeoutSeconds: 2       # fail if no response in 2 s
      successThreshold: 1     # one success flips it back to healthy
      failureThreshold: 3     # three failures mark pod un-ready

    liveness:
      type: http
      path: /health
      port: 4444
      initialDelaySeconds: 10 # wait 10 s after container start
      periodSeconds: 15
      timeoutSeconds: 2
      successThreshold: 1
      failureThreshold: 3

  # Kubernetes resource requests / limits
  resources:
    limits:
      cpu: 200m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 512Mi

  # Optional ingress for HTTP traffic
  ingress:
    enabled: true
    className: nginx
    host: gateway.local         # CHANGE to your FQDN (e.g. api.example.com)
    path: /
    pathType: Prefix
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      # cert-manager.io/cluster-issuer: letsencrypt-prod  # Uncomment to enable automatic TLS cert generation
    tls:
      enabled: false            # Set to true to enable TLS
      secretName: ""            # Name of the TLS secret (auto-generated if empty)

  ####################################################################
  # CORE ENVIRONMENT - injected one-by-one as name/value pairs.
  # Only the DATABASE / CACHE connection points live here; everything
  # else goes into the ConfigMap or Secret blocks below.
  ####################################################################
  env:
    host: 0.0.0.0               # bind address inside the container

    postgres:
      # host is auto-generated as <release>-mcp-stack-postgres
      # host: postgres          # uncomment to override the generated name
      port: 5432
      db: postgresdb
      userKey: POSTGRES_USER    # key in the secret that stores the username
      passwordKey: POSTGRES_PASSWORD

    redis:
      # host is auto-generated as <release>-mcp-stack-redis
      # host: redis             # uncomment to override the generated name
      port: 6379

  ####################################################################
  # PLAIN-TEXT (NON-SECRET) SETTINGS
  # Rendered into a ConfigMap; readable by anyone with GET access.
  ####################################################################
  config:
    # - Gunicorn settings ─
    GUNICORN_WORKERS: "2"               # number of worker processes
    GUNICORN_TIMEOUT: "600"             # worker timeout in seconds
    GUNICORN_MAX_REQUESTS: "10000"      # max requests per worker before restart
    GUNICORN_MAX_REQUESTS_JITTER: "100" # random jitter to avoid thundering herd
    GUNICORN_PRELOAD_APP: "true"        # preload app code before forking workers (TODO: not implemented yet)

    # ─ Basic application info ─
    APP_NAME: MCP_Gateway            # public-facing name of the gateway
    HOST: 0.0.0.0                    # address the server binds to
    PORT: "4444"                     # internal container port
    APP_ROOT_PATH: ""                # e.g. "/gateway" when deploying under sub-path

    # ─ Connection pooling ─
    DB_POOL_SIZE: "200"              # size of SQLAlchemy connection pool
    DB_MAX_OVERFLOW: "10"            # extra connections allowed beyond pool size
    DB_POOL_TIMEOUT: "30"            # seconds to wait for a connection
    DB_POOL_RECYCLE: "3600"          # recycle connections after N seconds

    # ─ Cache behaviour ─
    CACHE_TYPE: redis                # Backend cache driver (redis, memory, database)
    CACHE_PREFIX: "mcpgw:"           # Prefix applied to every cache key
    SESSION_TTL: "3600"              # TTL (s) for user sessions
    MESSAGE_TTL: "600"               # TTL (s) for ephemeral messages (completions)

    # ─ Connection retry settings ─
    REDIS_MAX_RETRIES: "3"           # Maximum retries for Redis cold start
    REDIS_RETRY_INTERVAL_MS: "2000"  # Interval between Redis retries (ms)
    DB_MAX_RETRIES: "3"              # Maximum retries for DB cold start
    DB_RETRY_INTERVAL_MS: "2000"     # Interval between DB retries (ms)

    # ─ Protocol & feature toggles ─
    PROTOCOL_VERSION: 2025-03-26
    MCPGATEWAY_UI_ENABLED: "true"    # toggle Admin UI
    MCPGATEWAY_ADMIN_API_ENABLED: "true" # toggle Admin API endpoints
    MCPGATEWAY_BULK_IMPORT_ENABLED: "true" # toggle bulk import endpoint
    MCPGATEWAY_BULK_IMPORT_MAX_TOOLS: "200" # maximum tools per bulk import
    MCPGATEWAY_BULK_IMPORT_RATE_LIMIT: "10" # requests per minute for bulk import

    # ─ A2A (Agent-to-Agent) Features ─
    MCPGATEWAY_A2A_ENABLED: "true"      # enable A2A agent features
    MCPGATEWAY_A2A_MAX_AGENTS: "100"    # maximum number of A2A agents allowed
    MCPGATEWAY_A2A_DEFAULT_TIMEOUT: "30" # default timeout for A2A HTTP requests
    MCPGATEWAY_A2A_MAX_RETRIES: "3"     # maximum retry attempts for A2A calls
    MCPGATEWAY_A2A_METRICS_ENABLED: "true" # enable A2A agent metrics collection

    # ─ MCP Server Catalog Configuration ─
    MCPGATEWAY_CATALOG_ENABLED: "true"  # enable MCP server catalog feature
    MCPGATEWAY_CATALOG_FILE: "mcp-catalog.yml" # path to catalog configuration file
    MCPGATEWAY_CATALOG_AUTO_HEALTH_CHECK: "true" # automatically health check catalog servers
    MCPGATEWAY_CATALOG_CACHE_TTL: "3600" # catalog cache TTL in seconds
    MCPGATEWAY_CATALOG_PAGE_SIZE: "100" # number of catalog servers per page

    # ─ UI Configuration ─
    MCPGATEWAY_UI_TOOL_TEST_TIMEOUT: "60000" # tool test timeout in milliseconds for the admin UI

    # ─ LLM Chat Feature ─
    LLMCHAT_ENABLED: "false"            # enable LLM Chat feature

    # ─ Default Configuration ─
    DEFAULT_ROOTS: "[]"                 # default roots configuration (JSON array)

    # ─ Security & CORS ─
    ENVIRONMENT: development         # deployment environment (development/production)
    APP_DOMAIN: http://localhost            # domain for production CORS origins
    CORS_ENABLED: "true"             # enable CORS processing in gateway
    CORS_ALLOW_CREDENTIALS: "true"   # allow credentials in CORS requests
    ALLOWED_ORIGINS: '["http://localhost","http://localhost:4444"]' # JSON list of allowed origins
    SKIP_SSL_VERIFY: "false"         # skip TLS certificate verification on upstream calls

    # ─ Security Headers ─
    SECURITY_HEADERS_ENABLED: "true" # enable security headers middleware
    X_FRAME_OPTIONS: DENY            # X-Frame-Options header value
    X_CONTENT_TYPE_OPTIONS_ENABLED: "true" # enable X-Content-Type-Options
    X_XSS_PROTECTION_ENABLED: "true" # enable X-XSS-Protection
    X_DOWNLOAD_OPTIONS_ENABLED: "true" # enable X-Download-Options
    HSTS_ENABLED: "true"             # enable HSTS header
    HSTS_MAX_AGE: "31536000"         # HSTS max age in seconds (1 year)
    HSTS_INCLUDE_SUBDOMAINS: "true"  # include subdomains in HSTS
    REMOVE_SERVER_HEADERS: "true"    # remove server identification headers

    # ─ Cookie Security ─
    SECURE_COOKIES: "true"           # force secure cookie flags
    COOKIE_SAMESITE: lax             # cookie SameSite attribute

    # ─ Logging ─
    LOG_LEVEL: INFO                  # DEBUG, INFO, WARNING, ERROR, CRITICAL
    LOG_FORMAT: json                 # json or text format
    LOG_TO_FILE: "false"             # enable file logging
    LOG_FILEMODE: "a+"               # file write mode (append/overwrite)
    LOG_FILE: ""                     # log filename when file logging enabled
    LOG_FOLDER: ""                   # directory for log files
    LOG_ROTATION_ENABLED: "false"    # enable log file rotation
    LOG_MAX_SIZE_MB: "1"             # max file size before rotation (MB)
    LOG_BACKUP_COUNT: "5"            # number of backup files to keep
    LOG_BUFFER_SIZE_MB: "1.0"        # size of in-memory log buffer (MB)

    # ─ Transports ─
    TRANSPORT_TYPE: all              # comma-separated list: http, ws, sse, stdio, all
    WEBSOCKET_PING_INTERVAL: "30"    # seconds between WS pings
    SSE_RETRY_TIMEOUT: "5000"        # milliseconds before SSE client retries
    SSE_KEEPALIVE_ENABLED: "true"    # enable SSE keepalive events
    SSE_KEEPALIVE_INTERVAL: "30"     # seconds between keepalive events

    # ─ Streaming sessions ─
    USE_STATEFUL_SESSIONS: "false"   # true = use event store; false = stateless
    JSON_RESPONSE_ENABLED: "true"    # default to JSON; false for SSE stream

    # ─ Federation ─
    FEDERATION_ENABLED: "true"       # enable federated mode
    FEDERATION_DISCOVERY: "false"    # advertise & discover peers automatically
    FEDERATION_PEERS: '[]'           # explicit peer list (JSON array)
    FEDERATION_TIMEOUT: "120"        # seconds before peer request timeout
    FEDERATION_SYNC_INTERVAL: "300"  # seconds between peer syncs

    # ─ Resource cache ─
    RESOURCE_CACHE_SIZE: "1000"      # max resources kept in memory cache
    RESOURCE_CACHE_TTL: "3600"       # TTL (s) for resources in cache
    MAX_RESOURCE_SIZE: "10485760"    # max allowed resource size in bytes (10 MB)

    # ─ Tool limits ─
    TOOL_TIMEOUT: "60"               # seconds per tool execution
    MAX_TOOL_RETRIES: "3"            # retries for failed tool runs
    TOOL_RATE_LIMIT: "100"           # invocations per minute cap
    TOOL_CONCURRENT_LIMIT: "10"      # concurrent tool executions
    GATEWAY_TOOL_NAME_SEPARATOR: "-" # separator for gateway tool routing

    # ─ Prompt cache ─
    PROMPT_CACHE_SIZE: "100"         # number of prompt templates to cache
    MAX_PROMPT_SIZE: "102400"        # max template size in bytes
    PROMPT_RENDER_TIMEOUT: "10"      # seconds to render a template

    # ─ Health checks ─
    HEALTH_CHECK_INTERVAL: "60"      # seconds between peer health checks
    HEALTH_CHECK_TIMEOUT: "10"       # request timeout per health check
    UNHEALTHY_THRESHOLD: "3"         # failed checks before peer marked unhealthy
    GATEWAY_VALIDATION_TIMEOUT: "5"  # gateway URL validation timeout (seconds)
    FILELOCK_NAME: gateway_healthcheck_init.lock # lock file used at start-up

    # ─ Development toggles ─
    DEV_MODE: "false"                # enable dev-mode features
    RELOAD: "false"                  # auto-reload code on changes
    DEBUG: "false"                   # verbose debug traces

    # ─ HTTP Retry Configuration ─
    RETRY_MAX_ATTEMPTS: "3"          # maximum retry attempts for HTTP requests
    RETRY_BASE_DELAY: "1.0"          # base delay between retries (seconds)
    RETRY_MAX_DELAY: "60"            # maximum delay between retries (seconds)
    RETRY_JITTER_MAX: "0.5"          # maximum jitter fraction of base delay

    # ─ Well-Known URI Configuration ─
    WELL_KNOWN_ENABLED: "true"       # enable well-known URI endpoints
    WELL_KNOWN_ROBOTS_TXT: |
      User-agent: *
      Disallow: /

      # MCP Gateway is a private API gateway
      # Public crawling is disabled by default
    WELL_KNOWN_SECURITY_TXT: ""      # security.txt content (RFC 9116)
    WELL_KNOWN_CUSTOM_FILES: "{}"    # additional custom well-known files (JSON)
    WELL_KNOWN_CACHE_MAX_AGE: "3600" # cache control for well-known files (seconds)

    # ─ Plugin Configuration ─
    PLUGINS_ENABLED: "false"         # enable the plugin framework
    PLUGIN_CONFIG_FILE: "plugins/config.yaml" # path to main plugin configuration file
    PLUGINS_MTLS_CA_BUNDLE: ""               # default CA bundle for external plugins (optional)
    PLUGINS_MTLS_CLIENT_CERT: ""             # gateway client certificate for plugin mTLS
    PLUGINS_MTLS_CLIENT_KEY: ""              # gateway client key for plugin mTLS (optional)
    PLUGINS_MTLS_CLIENT_KEY_PASSWORD: ""     # password for the plugin client key (optional)
    PLUGINS_MTLS_VERIFY: "true"              # verify remote plugin certificates
    PLUGINS_MTLS_CHECK_HOSTNAME: "true"      # enforce hostname verification when verifying certs
    PLUGINS_CLI_COMPLETION: "false"  # enable auto-completion for plugins CLI
    PLUGINS_CLI_MARKUP_MODE: ""      # set markup mode for plugins CLI

    # ─ OpenTelemetry Observability ─
    OTEL_ENABLE_OBSERVABILITY: "true" # master switch for observability
    OTEL_TRACES_EXPORTER: "otlp"     # traces exporter: otlp, jaeger, zipkin, console, none
    OTEL_EXPORTER_OTLP_PROTOCOL: "grpc" # OTLP protocol: grpc or http
    OTEL_EXPORTER_OTLP_INSECURE: "true" # use insecure connection for OTLP
    OTEL_SERVICE_NAME: "mcp-gateway"  # service name for traces
    OTEL_BSP_MAX_QUEUE_SIZE: "2048"   # max queue size for batch span processor
    OTEL_BSP_MAX_EXPORT_BATCH_SIZE: "512" # max export batch size
    OTEL_BSP_SCHEDULE_DELAY: "5000"   # schedule delay in milliseconds

    # ─ Header Passthrough (Security Warning) ─
    ENABLE_HEADER_PASSTHROUGH: "false" # enable HTTP header passthrough (security implications)
    ENABLE_OVERWRITE_BASE_HEADERS: "false" # enable overwriting of base headers (advanced usage)
    DEFAULT_PASSTHROUGH_HEADERS: '["X-Tenant-Id", "X-Trace-Id"]' # default headers to pass through (JSON array)

    # ─ Advanced Validation Configuration ─
    # These are advanced security validation settings with sensible defaults.
    # Most users won't need to change these values.
    VALIDATION_ALLOWED_URL_SCHEMES: '["http://", "https://", "ws://", "wss://"]' # allowed URL schemes (JSON array)
    VALIDATION_ALLOWED_MIME_TYPES: '["text/plain", "text/html", "text/css", "text/markdown", "text/javascript", "application/json", "application/xml", "application/pdf", "image/png", "image/jpeg", "image/gif", "image/svg+xml", "application/octet-stream"]' # allowed MIME types (JSON array)
    VALIDATION_DANGEROUS_HTML_PATTERN: '<(script|iframe|object|embed|link|meta|base|form|img|svg|video|audio|source|track|area|map|canvas|applet|frame|frameset|html|head|body|style)\b|</*(script|iframe|object|embed|link|meta|base|form|img|svg|video|audio|source|track|area|map|canvas|applet|frame|frameset|html|head|body|style)>' # pattern to detect dangerous HTML tags
    VALIDATION_DANGEROUS_JS_PATTERN: '(?i)(?:^|\s|[\"''`<>=])(javascript:|vbscript:|data:\s*[^,]*[;\s]*(javascript|vbscript)|\bon[a-z]+\s*=|<\s*script\b)' # pattern to detect JavaScript injection
    VALIDATION_NAME_PATTERN: '^[a-zA-Z0-9_.\-\s]+$' # pattern for validating names (allows spaces)
    VALIDATION_IDENTIFIER_PATTERN: '^[a-zA-Z0-9_\-\.]+$' # pattern for validating IDs (no spaces)
    VALIDATION_SAFE_URI_PATTERN: '^[a-zA-Z0-9_\-.:/?=&%]+$' # pattern for safe URI characters
    VALIDATION_UNSAFE_URI_PATTERN: '[<>"''\\]' # pattern to detect unsafe URI characters
    VALIDATION_TOOL_NAME_PATTERN: '^[a-zA-Z][a-zA-Z0-9._-]*$' # MCP tool naming pattern
    VALIDATION_TOOL_METHOD_PATTERN: '^[a-zA-Z][a-zA-Z0-9_\./-]*$' # MCP tool method naming pattern
    VALIDATION_MAX_NAME_LENGTH: "255" # maximum length for names
    VALIDATION_MAX_DESCRIPTION_LENGTH: "8192" # maximum length for descriptions (8KB)
    VALIDATION_MAX_TEMPLATE_LENGTH: "65536" # maximum length for templates (64KB)
    VALIDATION_MAX_CONTENT_LENGTH: "1048576" # maximum length for content (1MB)
    VALIDATION_MAX_JSON_DEPTH: "10" # maximum JSON nesting depth
    VALIDATION_MAX_URL_LENGTH: "2048" # maximum URL length
    VALIDATION_MAX_RPC_PARAM_SIZE: "262144" # maximum RPC parameter size (256KB)
    VALIDATION_MAX_METHOD_LENGTH: "128" # maximum method name length
    VALIDATION_MAX_REQUESTS_PER_MINUTE: "60" # rate limiting: max requests per minute

  ####################################################################
  # SENSITIVE SETTINGS
  # Rendered into an Opaque Secret.  NO $(VAR) expansion here.
  # DATABASE_URL & REDIS_URL are declared inside the Deployment
  # so their placeholders resolve at runtime. Override them if needed.
  ####################################################################
  secret:
    # ─ Admin & auth ─
    BASIC_AUTH_USER: admin                 # username for basic-auth login
    BASIC_AUTH_PASSWORD: changeme          # password for basic-auth (CHANGE IN PROD!)
    AUTH_REQUIRED: "true"                  # enforce authentication globally (true/false)
    JWT_SECRET_KEY: my-test-key            # secret key used to sign JWT tokens
    JWT_ALGORITHM: HS256                   # signing algorithm for JWT tokens
    JWT_AUDIENCE: mcpgateway-api           # JWT audience claim for token validation
    JWT_ISSUER: mcpgateway                 # JWT issuer claim for token validation
    TOKEN_EXPIRY: "10080"                  # JWT validity (minutes); 10080 = 7 days
    REQUIRE_TOKEN_EXPIRATION: "false"      # require all JWT tokens to have expiration claims
    AUTH_ENCRYPTION_SECRET: my-test-salt   # passphrase to derive AES key for secure storage

    # ─ Email-Based Authentication ─
    EMAIL_AUTH_ENABLED: "true"             # enable email-based authentication system
    PLATFORM_ADMIN_EMAIL: admin@example.com # email for bootstrap platform admin user
    PLATFORM_ADMIN_PASSWORD: changeme     # password for bootstrap platform admin user
    PLATFORM_ADMIN_FULL_NAME: Platform Administrator # full name for bootstrap platform admin

    # ─ Password Hashing & Security ─
    ARGON2ID_TIME_COST: "3"                # Argon2id time cost (iterations)
    ARGON2ID_MEMORY_COST: "65536"          # Argon2id memory cost in KiB
    ARGON2ID_PARALLELISM: "1"              # Argon2id parallelism (threads)
    PASSWORD_MIN_LENGTH: "8"               # minimum password length
    PASSWORD_REQUIRE_UPPERCASE: "false"    # require uppercase letters in passwords
    PASSWORD_REQUIRE_LOWERCASE: "false"    # require lowercase letters in passwords
    PASSWORD_REQUIRE_NUMBERS: "false"      # require numbers in passwords
    PASSWORD_REQUIRE_SPECIAL: "false"      # require special characters in passwords
    MAX_FAILED_LOGIN_ATTEMPTS: "5"         # maximum failed login attempts before lockout
    ACCOUNT_LOCKOUT_DURATION_MINUTES: "30" # account lockout duration in minutes
    MIN_PASSWORD_LENGTH: "12"              # minimum password length for validation
    MIN_SECRET_LENGTH: "32"                # minimum secret key length for validation
    REQUIRE_STRONG_SECRETS: "false"        # enforce strong secrets (fail startup on weak secrets)

    # ─ MCP Client Authentication ─
    MCP_CLIENT_AUTH_ENABLED: "true"        # enable JWT authentication for MCP client operations
    TRUST_PROXY_AUTH: "false"              # trust proxy authentication headers
    PROXY_USER_HEADER: X-Authenticated-User # header containing authenticated username from proxy

    # ─ OAuth Configuration ─
    OAUTH_REQUEST_TIMEOUT: "30"            # OAuth request timeout in seconds
    OAUTH_MAX_RETRIES: "3"                 # maximum retries for OAuth token requests
    OAUTH_DEFAULT_TIMEOUT: "3600"          # default OAuth token timeout in seconds

    # ─ OAuth Dynamic Client Registration (DCR) & PKCE ─
    DCR_ENABLED: "true"                    # enable Dynamic Client Registration (RFC 7591)
    DCR_AUTO_REGISTER_ON_MISSING_CREDENTIALS: "true" # auto-register when gateway has issuer but no client_id
    DCR_DEFAULT_SCOPES: '["mcp:read"]'     # default OAuth scopes to request during DCR (JSON array)
    DCR_ALLOWED_ISSUERS: "[]"              # allowlist of trusted issuer URLs for DCR (empty = allow any)
    DCR_TOKEN_ENDPOINT_AUTH_METHOD: "client_secret_basic" # token endpoint auth method for DCR
    DCR_METADATA_CACHE_TTL: "3600"         # AS metadata cache TTL in seconds (RFC 8414 discovery)
    DCR_CLIENT_NAME_TEMPLATE: "MCP Gateway ({gateway_name})" # template for client_name in DCR requests
    OAUTH_DISCOVERY_ENABLED: "true"        # enable AS metadata discovery (RFC 8414)
    OAUTH_PREFERRED_CODE_CHALLENGE_METHOD: "S256" # PKCE code challenge method (S256 or plain)

    # ─ JWT Configuration (Advanced) ─
    JWT_AUDIENCE_VERIFICATION: "true"      # JWT audience verification (disable for DCR)
    JWT_PRIVATE_KEY_PATH: ""               # path to JWT private key file (RSA/ECDSA algorithms)
    JWT_PUBLIC_KEY_PATH: ""                # path to JWT public key file (RSA/ECDSA algorithms)

    # ─ SSO (Single Sign-On) Configuration ─
    SSO_ENABLED: "false"                   # master switch for Single Sign-On authentication
    SSO_AUTO_CREATE_USERS: "true"          # automatically create users from SSO providers
    SSO_TRUSTED_DOMAINS: "[]"              # trusted email domains (JSON array)
    SSO_PRESERVE_ADMIN_AUTH: "true"        # preserve local admin authentication when SSO enabled
    SSO_REQUIRE_ADMIN_APPROVAL: "false"    # require admin approval for new SSO registrations
    SSO_AUTO_ADMIN_DOMAINS: "[]"           # email domains that automatically get admin privileges
    SSO_ISSUERS: ""                        # optional JSON array of issuer URLs for SSO providers

    # ─ GitHub OAuth ─
    SSO_GITHUB_ENABLED: "false"            # enable GitHub OAuth authentication
    SSO_GITHUB_CLIENT_ID: ""               # GitHub OAuth client ID
    SSO_GITHUB_CLIENT_SECRET: ""           # GitHub OAuth client secret
    SSO_GITHUB_ADMIN_ORGS: "[]"            # GitHub orgs granting admin privileges (JSON)

    # ─ Google OAuth ─
    SSO_GOOGLE_ENABLED: "false"            # enable Google OAuth authentication
    SSO_GOOGLE_CLIENT_ID: ""               # Google OAuth client ID
    SSO_GOOGLE_CLIENT_SECRET: ""           # Google OAuth client secret
    SSO_GOOGLE_ADMIN_DOMAINS: "[]"         # Google admin domains (JSON)

    # ─ IBM Security Verify OIDC ─
    SSO_IBM_VERIFY_ENABLED: "false"        # enable IBM Security Verify OIDC authentication
    SSO_IBM_VERIFY_CLIENT_ID: ""           # IBM Security Verify client ID
    SSO_IBM_VERIFY_CLIENT_SECRET: ""       # IBM Security Verify client secret
    SSO_IBM_VERIFY_ISSUER: ""              # IBM Security Verify OIDC issuer URL

    # ─ Okta OIDC ─
    SSO_OKTA_ENABLED: "false"              # enable Okta OIDC authentication
    SSO_OKTA_CLIENT_ID: ""                 # Okta client ID
    SSO_OKTA_CLIENT_SECRET: ""             # Okta client secret
    SSO_OKTA_ISSUER: ""                    # Okta issuer URL

    # ─ Keycloak OIDC ─
    SSO_KEYCLOAK_ENABLED: "false"          # enable Keycloak OIDC authentication
    SSO_KEYCLOAK_BASE_URL: ""              # Keycloak base URL (e.g., https://keycloak.example.com)
    SSO_KEYCLOAK_REALM: "master"           # Keycloak realm name
    SSO_KEYCLOAK_CLIENT_ID: ""             # Keycloak client ID
    SSO_KEYCLOAK_CLIENT_SECRET: ""         # Keycloak client secret
    SSO_KEYCLOAK_MAP_REALM_ROLES: "true"   # map Keycloak realm roles to gateway teams
    SSO_KEYCLOAK_MAP_CLIENT_ROLES: "false" # map Keycloak client roles to gateway RBAC
    SSO_KEYCLOAK_USERNAME_CLAIM: "preferred_username" # JWT claim for username
    SSO_KEYCLOAK_EMAIL_CLAIM: "email"      # JWT claim for email
    SSO_KEYCLOAK_GROUPS_CLAIM: "groups"    # JWT claim for groups/roles

    # ─ Microsoft Entra ID OIDC ─
    SSO_ENTRA_ENABLED: "false"             # enable Microsoft Entra ID (Azure AD) OIDC authentication
    SSO_ENTRA_CLIENT_ID: ""                # Microsoft Entra ID client ID
    SSO_ENTRA_CLIENT_SECRET: ""            # Microsoft Entra ID client secret
    SSO_ENTRA_TENANT_ID: ""                # Microsoft Entra ID tenant ID

    # ─ Generic OIDC Provider (Keycloak, Auth0, Authentik, etc.) ─
    SSO_GENERIC_ENABLED: "false"           # enable generic OIDC provider authentication
    SSO_GENERIC_PROVIDER_ID: ""            # provider ID (e.g., keycloak, auth0, authentik)
    SSO_GENERIC_DISPLAY_NAME: ""           # display name shown on login page
    SSO_GENERIC_CLIENT_ID: ""              # generic OIDC client ID
    SSO_GENERIC_CLIENT_SECRET: ""          # generic OIDC client secret
    SSO_GENERIC_AUTHORIZATION_URL: ""      # authorization endpoint URL
    SSO_GENERIC_TOKEN_URL: ""              # token endpoint URL
    SSO_GENERIC_USERINFO_URL: ""           # userinfo endpoint URL
    SSO_GENERIC_ISSUER: ""                 # OIDC issuer URL
    SSO_GENERIC_SCOPE: "openid profile email" # OAuth scopes (space-separated)

    # ─ Personal Teams Configuration ─
    AUTO_CREATE_PERSONAL_TEAMS: "true"     # enable automatic personal team creation for new users
    PERSONAL_TEAM_PREFIX: personal         # personal team naming prefix
    MAX_TEAMS_PER_USER: "50"               # maximum number of teams a user can belong to
    MAX_MEMBERS_PER_TEAM: "100"            # maximum number of members per team
    INVITATION_EXPIRY_DAYS: "7"            # number of days before team invitations expire
    REQUIRE_EMAIL_VERIFICATION_FOR_INVITES: "true" # require email verification for team invitations

    # ─ OpenTelemetry Endpoints (Optional/Sensitive) ─
    OTEL_EXPORTER_OTLP_ENDPOINT: ""        # OTLP endpoint (e.g., http://localhost:4317)
    OTEL_EXPORTER_OTLP_HEADERS: ""         # OTLP headers (comma-separated key=value)
    OTEL_EXPORTER_JAEGER_ENDPOINT: ""      # Jaeger endpoint
    OTEL_EXPORTER_ZIPKIN_ENDPOINT: ""      # Zipkin endpoint
    OTEL_RESOURCE_ATTRIBUTES: ""           # resource attributes (comma-separated key=value)

    # ─ Documentation & UI Settings (Sensitive) ─
    DOCS_ALLOW_BASIC_AUTH: "false"         # allow basic auth for docs endpoints

    # (derived URLs are defined in deployment-mcp.yaml)

    # ─ Optional database / redis overrides ─
    # DATABASE_URL: "postgresql://admin:s3cr3t@db.acme.com:5432/prod" # override the auto-generated URL
    # REDIS_URL:    "redis://cache.acme.com:6379/0"                   # override the auto-generated URL

  ####################################################################
  # Names of ConfigMap / Secret are resolved by templates; leave as-is.
  ####################################################################
  envFrom:
    - secretRef:
        name: mcp-gateway-secret
    - configMapRef:
        name: mcp-gateway-config

########################################################################
# DATABASE MIGRATION (Alembic)
# Runs as a Job before mcpgateway deployment
########################################################################
migration:
  enabled: true                             # Set to false to skip migrations

  # Job configuration
  restartPolicy: Never                      # Job should not restart on failure
  backoffLimit: 3                           # Retry up to 3 times before giving up
  activeDeadlineSeconds: 600                # Kill job after 10 minutes

  # Use same image as mcpgateway
  image:
    repository: ghcr.io/ibm/mcp-context-forge
    tag: latest                             # Should match mcpContextForge.image.tag
    #pullPolicy: IfNotPresent
    pullPolicy: Always                      # always pull the latest image; useful for dev/testing

  # Resource limits for the migration job
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi

  # Migration command configuration
  command:
    waitForDb: "python3 /app/mcpgateway/utils/db_isready.py --max-tries 30 --interval 2 --timeout 5"
    migrate: "alembic upgrade head || echo '⚠️ Migration check failed'"

########################################################################
# POSTGRES DATABASE
########################################################################
postgres:
  enabled: true

  image:
    repository: postgres
    tag: "17"
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 5432

  # PersistentVolumeClaim for data durability
  persistence:
    enabled: true
    storageClassName: manual     # pick a StorageClass (e.g. gp2, standard)
    accessModes: [ReadWriteMany]
    size: 5Gi

  # Leave blank to autogenerate <release>-mcp-stack-postgres-secret.
  existingSecret: ""

  credentials:                  # used only when existingSecret is blank
    database: postgresdb
    user: admin
    password: test123           # CHANGE ME in production!

  # ─── Resource limits & requests ───
  resources:
    limits:
      cpu: 1000m          # 1 core hard cap
      memory: 1Gi
    requests:
      cpu: 500m           # guaranteed half-core
      memory: 64Mi

  # ─── Health & readiness probes ───
  probes:
    readiness:
      type: exec
      command: ["pg_isready", "-U", "$(POSTGRES_USER)"]
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 3
      successThreshold: 1
      failureThreshold: 3

    liveness:
      type: exec
      command: ["pg_isready", "-U", "$(POSTGRES_USER)"]
      initialDelaySeconds: 10
      periodSeconds: 15
      timeoutSeconds: 3
      successThreshold: 1
      failureThreshold: 5

########################################################################
# REDIS CACHE
########################################################################
redis:
  enabled: true

  image:
    repository: redis
    tag: latest
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 6379

  # ─── Resource limits & requests ───
  resources:
    limits:
      cpu: 100m          # cap at 0.1 core, 256 MiB
      memory: 256Mi
    requests:
      cpu: 50m           # reserve 0.05 core, 128 MiB
      memory: 16Mi

  # ─── Health & readiness probes ───
  probes:
    readiness:
      type: exec
      command: ["redis-cli", "PING"]
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 2
      successThreshold: 1
      failureThreshold: 3

    liveness:
      type: exec
      command: ["redis-cli", "PING"]
      initialDelaySeconds: 5
      periodSeconds: 15
      timeoutSeconds: 2
      successThreshold: 1
      failureThreshold: 5

########################################################################
# PGADMIN - Web UI for Postgres
########################################################################
pgadmin:
  enabled: true

  image:
    repository: dpage/pgadmin4
    tag: latest
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80

  env:
    email: admin@example.com
    password: admin123           # CHANGE ME in production!

  # ─── Resource limits & requests ───
  resources:
    limits:
      cpu: 200m          # cap at 0.2 core, 256 MiB
      memory: 256Mi
    requests:
      cpu: 100m          # reserve 0.1 core, 128 MiB
      memory: 128Mi

  # ─── Health & readiness probes ───
  probes:
    readiness:
      type: http
      path: /misc/ping      # lightweight endpoint
      port: 80
      initialDelaySeconds: 60     # pgAdmin needs more time to initialize
      periodSeconds: 10
      timeoutSeconds: 5           # increased timeout
      successThreshold: 1
      failureThreshold: 5         # more tolerance for failures

    liveness:
      type: http
      path: /misc/ping
      port: 80
      initialDelaySeconds: 90     # even longer for liveness
      periodSeconds: 20           # check less frequently
      timeoutSeconds: 5           # increased timeout
      successThreshold: 1
      failureThreshold: 3         # less aggressive killing

########################################################################
# REDIS-COMMANDER - Web UI for Redis
########################################################################
redisCommander:
  enabled: true

  image:
    repository: rediscommander/redis-commander
    tag: latest
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 8081

  # ─── Resource limits & requests ───
  resources:
    limits:
      cpu: 100m          # cap at 0.1 core, 256 MiB
      memory: 256Mi
    requests:
      cpu: 50m           # reserve 0.05 core, 128 MiB
      memory: 128Mi

  # ─── Health & readiness probes ───
  probes:
    readiness:
      type: http
      path: /              # root returns 200 OK
      port: 8081
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 2
      successThreshold: 1
      failureThreshold: 3

    liveness:
      type: http
      path: /
      port: 8081
      initialDelaySeconds: 10
      periodSeconds: 15
      timeoutSeconds: 2
      successThreshold: 1
      failureThreshold: 5

########################################################################
# MCP-FAST-TIME-SERVER - optional high-performance time server for MCP (go)
# Provides a fast implementation including SSE and Streamable HTTP
########################################################################
mcpFastTimeServer:
  enabled: true            # switch to true to deploy
  replicaCount: 2
  image:
    repository: ghcr.io/ibm/fast-time-server
    tag: "0.8.0"
    pullPolicy: IfNotPresent
  port: 8080

  # Ingress example (leave as-is if you already have it)
  ingress:
    enabled: true
    path: /fast-time
    pathType: Prefix
    servicePort: 80

  # ─── Health & readiness probes ───
  probes:
    readiness:
      type: http
      path: /health
      port: 8080
      initialDelaySeconds: 3
      periodSeconds: 10
      timeoutSeconds: 2
      successThreshold: 1
      failureThreshold: 3

    liveness:
      type: http
      path: /health
      port: 8080
      initialDelaySeconds: 3
      periodSeconds: 15
      timeoutSeconds: 2
      successThreshold: 1
      failureThreshold: 3

  # Tiny Go process: ~10 MB runtime footprint
  resources:
    limits:
      cpu: 50m           # ~5 % of a core
      memory: 64Mi
    requests:
      cpu: 25m
      memory: 10Mi
